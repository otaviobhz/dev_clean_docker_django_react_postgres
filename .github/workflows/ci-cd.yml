name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  # ============================================================================
  # Job 1: Build Docker Images
  # ============================================================================
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        service: [frontend, backend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/myps-${{ matrix.service }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push - ${{ matrix.service }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service == 'backend' && '.' || './frontend' }}
          file: ${{ matrix.service == 'backend' && './backend/Dockerfile' || './frontend/Dockerfile' }}
          push: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # ============================================================================
  # Job 2: Success Notification
  # ============================================================================
  notify:
    name: Build Complete
    runs-on: ubuntu-latest
    needs: build
    if: always()

    steps:
      - name: Show results
        run: |
          echo "ðŸŽ‰ Build completed!"
          echo "Status: ${{ needs.build.result }}"
          echo ""
          echo "Docker images published to:"
          echo "- ghcr.io/${{ github.repository_owner }}/myps-frontend:latest"
          echo "- ghcr.io/${{ github.repository_owner }}/myps-backend:latest"
          echo ""
          echo "View packages: https://github.com/${{ github.repository_owner }}?tab=packages"
