name: Preview Pull Request

# Cria um ambiente de preview para cada Pull Request
on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  preview:
    name: Create Preview Environment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate preview URL
        id: preview-url
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_OUTPUT
          echo "PREVIEW_URL=https://pr-${PR_NUMBER}.myps.dev" >> $GITHUB_OUTPUT

      - name: Build Docker images
        run: |
          docker compose -f docker-compose.dev.yml build

      - name: Start preview environment
        run: |
          docker compose -f docker-compose.dev.yml up -d

      - name: Wait for services
        run: |
          echo "Waiting for services..."
          sleep 20
          docker compose ps

      - name: Health check
        run: |
          curl -f http://localhost:8001/api/health || echo "Backend health check failed"
          curl -f http://localhost:8081 || echo "Frontend health check failed"

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ðŸš€ Preview Environment Ready!\n\n` +
                    `- Frontend: http://localhost:8081\n` +
                    `- Backend API: http://localhost:8001/api/\n` +
                    `- API Docs: http://localhost:8001/api/docs\n\n` +
                    `PR #${{ steps.preview-url.outputs.PR_NUMBER }}`
            })

      - name: Cleanup on PR close
        if: github.event.action == 'closed'
        run: |
          docker compose -f docker-compose.dev.yml down -v
